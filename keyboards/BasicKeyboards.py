from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types.callback_game import CallbackGame
from typing import Union, Tuple, List, Literal


from secret_data import TG_RU_CHANNEL_LINK

from aiogram.types import (ReplyKeyboardRemove, ReplyKeyboardMarkup,
                           KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton)

from aiogram.utils.web_app import safe_parse_webapp_init_data, WebAppInitData
from aiogram.types.web_app_info import WebAppInfo


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞[—Å—Ç—Ä–æ–∫–∞[–∫–Ω–æ–ø–∫–∞[text & data], ...], ...]
def get_keyboard(
        # buttons: List[List[Tuple[str, ..., Union[str, int],]]],
        buttons,
        langs: Tuple[str, ...] = ('en', ),
) -> dict[str, list | InlineKeyboardMarkup]:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    :param buttons: –¥–≤—É–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –∫–æ—Ä—Ç–µ–∂–µ–π –∏–∑ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
    –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∏ callback –∑–Ω–∞—á–µ–Ω–∏–µ. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–∞—Å—Å–∏–≤–∞
    –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–≤—Ç–æ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç
    –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞
    :return: —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–∏ - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏, –∞
    –∑–Ω–∞—á–µ–Ω–∏—è - —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    """

    boards = {}
    for i, lang in enumerate(langs):
        boards[lang] = []
        for row in buttons:
            layer_buts = []
            for but in row:
                b = InlineKeyboardButton(text=but[i], callback_data=but[-1])
                layer_buts.append(b)
            boards[lang].append(layer_buts)
        boards[lang] = InlineKeyboardMarkup(inline_keyboard = boards[lang])
    del layer_buts
    return boards


start_kb = get_keyboard(
    [
        [('–ü–æ–µ—Ö–∞–ª–∏', "Let's start", 'ready')],
    ], langs=('ru', 'en')
)



main_page_kb = get_keyboard(
    [
        [
            ('ü§ñ –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç', 'ü§ñ My account', 'account'),
            ('üí≥ –ü–æ–∫—É–ø–∫–∏', 'üí≥ Buy', 'market')
        ],
        [
            ('üìã –°–ø—Ä–∞–≤–∫–∞', 'üìã Learn', 'help'),
            ('üé∞ –ö–∞–∑–∏–Ω–æ', 'üé∞ Casino', 'casino')
        ],
        [
            ('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏', '‚öô Settings', 'settings'),
            ('üé£ –ü—Ä–∏–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–∞', 'üé£ Invite friend','referral')
         ]
    ], langs=('ru', 'en')
)

more_coins_kb = get_keyboard(
    [
        [
            ('üîé –ë–æ–ª—å—à–µ –º–æ–Ω–µ—Ç', 'üîé More coins', 'market'),
         ]
    ], langs=('ru', 'en')
)

account_from_command_kb = get_keyboard(
    [
        [
            ('üîé –ë–æ–ª—å—à–µ –º–æ–Ω–µ—Ç', 'üîé More coins', 'market'),
         ]
    ], langs=('ru', 'en')
)

account_from_menu_kb = get_keyboard(
    [
        [
            ('üîé –ë–æ–ª—å—à–µ –º–æ–Ω–µ—Ç', 'üîé More coins', 'market'),
            ('üîô –ù–∞–∑–∞–¥', 'üîô Back', 'main')
         ]
    ], langs=('ru', 'en')
)

# language_kb = InlineKeyboardMarkup(
#     inline_keyboard = [
#         [InlineKeyboardButton(text="English", callback_data="en"),
#          InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π", callback_data="ru")]
#     ]
# )



cancel_kb = get_keyboard(
    [
        [
            ('‚úñ –û—Ç–º–µ–Ω–∏—Ç—å', '‚úñ Cancel', 'cancel'),
         ]
    ], langs=('ru', 'en')
)


help_kb = get_keyboard(
    [
        [(
            '‚Åâ –ó–∞—á–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –≤–∏–¥–µ –º–æ–Ω–µ—Ç?', '‚Åâ Why I have limitations in the form of coins?', 'restriction_reason'
        )],
        [('üîô –ù–∞–∑–∞–¥', 'üîô Back', 'main')],
    ], langs=('ru', 'en')
)

back_to_main_kb = get_keyboard(
    [
        [('üîô –ù–∞–∑–∞–¥', 'üîô Back', 'main')],
    ], langs=('ru', 'en')
)

back_and_cancel_kb = get_keyboard(
    [
        [('üîô –ù–∞–∑–∞–¥', 'üîô Back', 'back')],
        [('‚úñ –û—Ç–º–µ–Ω–∏—Ç—å', '‚úñ Cancel', 'cancel')],
    ], langs=('ru', 'en')
)

confirm_feedback_kb = get_keyboard(
    [
        [('‚úî –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', '‚úî Confirm', 'send_feedback')],
        [('‚úñ –û—Ç–º–µ–Ω–∏—Ç—å', '‚úñ Cancel', 'cancel')],
    ], langs=('ru', 'en')
)


subscribe_to_ru_channel_kb = InlineKeyboardMarkup(
    inline_keyboard = [
        [InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª", url=TG_RU_CHANNEL_LINK)]
    ]
)


def make_keyboard(buttons, langs: Tuple = ('en', )):
    boards = {}
    for i, lang in enumerate(langs):
        boards[lang] = []
        for row in buttons:
            layer_buts = []
            for but in row:
                text = but[i]
                button_data = but[-1]
                button_arg = {"callback_data": button_data} if isinstance(button_data, str) else button_data
                b = InlineKeyboardButton(text=text, **button_arg)
                layer_buts.append(b)
            boards[lang].append(layer_buts)
        boards[lang] = InlineKeyboardMarkup(inline_keyboard = boards[lang])
        return boards


help_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="Open App", web_app=WebAppInfo(url="https://remainedmind.github.io/contact.html"))]
    ]
)

help_kb = make_keyboard(
    buttons=(
        [
            [(
                '‚Åâ Why I have limitations in the form of coins?', '‚Åâ –ó–∞—á–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –≤–∏–¥–µ –º–æ–Ω–µ—Ç?',
                'restriction_reason'
            )],
            [('üîô Back', 'üîô –ù–∞–∑–∞–¥',  'main')],
            [
                ("Report the problem", "–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ", {"web_app": WebAppInfo(url="https://remainedmind.github.io/RobBot/web/pages/feedback_form.html")})
                # ("Report the problem", "–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ", {"web_app": WebAppInfo(url="http://127.0.0.1:8080//feedback_form.html")})

            ],
        ]
    ),
    langs=['en', 'ru']
)
