import asyncio
import random
from aiogram import exceptions, Bot
from aiogram.types import Message
from aiogram.methods.send_chat_action import SendChatAction
# from aiogram.utils.chat_action import ChatActionSender
from processing.SQL_processingg.SQL_high_level_processing import check_for_premium
from text_data.message_answers import answers_texts as ma_texts
from const import DELAY

answer_delay = {
    'slow': ('üïêüïëüïíüïîüïïüïñüïòüïöüïõ', "/-\\|/-\\|/"),
    'fast':  ('üïêüïíüïïüïò', "/-\\|")
}

async def get_midterm_emojis(speed):
    return random.choice(answer_delay[speed])


async def spin(msg, text, delay):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    :param msg: message to edit
    :param text: text to change (a bit)
    :param delay: ratio of speed
    :return:
    """
    text = text[:-3]+' '  # –£–¥–∞–ª—è–µ–º –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ
    # chars = "/-\\|" * delay
    speed = 'slow' if delay > 1 else 'fast'
    chars = await get_midterm_emojis(speed=speed)
    # chars = random.choice(('üïêüïëüïíüïîüïïüïñüïòüïöüïõ', "/-\\|"*2))

    for c in chars:
        try:
            delay = 0.6
            await msg.edit_text(text + c)
        except exceptions.TelegramRetryAfter:
            # too high server load. Pass some actions
            delay = 2
        await asyncio.sleep(delay)





async def escort(user_status: str, message: Message, bot: Bot, target, lang='en', delay: int=2):
    """
    –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –∫–æ—Ç–æ—Ä–µ–æ –≤ –∏—Ç–æ–≥–µ
    –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ –æ—Ç–≤–µ—Ç –ë–æ—Ç–∞
    :param message:
    :param lang:
    :param target: —á—Ç–æ –º—ã —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∏—Ç—å: —Ñ–æ—Ç–æ, —Ç–µ–∫—Å—Ç, –æ–±—Ä–∞–±–æ—Ç–∫—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    :param delay: –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏.
    –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ –ø–ª–∞–≤–Ω–æ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ–±—â—É—é
    —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∏ –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    :return: None
    """
    # –ú—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑
    # —Å–ø–∏—Å–∫–∞: —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–≤–æ–µ, –≤—Ç–æ—Ä–æ–µ –∏ —Ç.–¥. –í —Å–ø–∏—Å–∫–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–º —Å
    # –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∫–∞—Ä—Ç–∏–Ω–æ–∫, –Ω–∞ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –±–æ–ª—å—à–µ. –ü–æ—ç—Ç–æ–º—É –Ω–∞–º
    # –Ω—É–∂–µ–Ω —Å–¥–≤–∏–≥ –Ω–∞ 1:
    option = 1 * (target == 'photo')  #
    chat_id = message.chat.id
    delay = DELAY[user_status]
    # if user_status != 'user':
    #     delay = 1
    # ChatAction
    action = 'upload_photo' if target =='photo' else 'typing'

    answer = ma_texts['answering'][target][lang]
    reply = await message.reply(answer[0 + option])

    await bot(SendChatAction(chat_id=chat_id, action=action))
    # –ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê: |
    #_________________
    # async with ChatActionSender.typing(chat_id=message.chat.id, bot=bot):
    #     await asyncio.sleep(10)
    # Do something long

    await asyncio.sleep(delay/2)

    await spin(reply, answer[1 + option], delay)
    # await asyncio.sleep(delay)
    # await SendChatAction(chat_id=id, action="typing")
    await reply.edit_text(answer[2 + option])
    # await asyncio.sleep(delay/2)
    return reply